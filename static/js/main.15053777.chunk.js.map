{"version":3,"sources":["exampleData.js","businessRules.ts","components/alertBar.jsx","components/inputArea.jsx","components/colArea.jsx","App.js","reportWebVitals.js","index.tsx"],"names":["pyProjectData","regexList","dependencySpecification","regex","RegExp","canUpdateDependency","dependency","dependencies","i","length","test","push","join","discoveryDependencySpecification","includes","processDependency","section","version","pyProjectFileToml","tool","poetry","processPyProjectAndVersion","versions","currentDependenciesVersions","forEach","processDependencyList","map","value","replace","split","slice","getNameAndVersionOfEachDependency","filter","splitTextLinesIntoList","AlertBar","props","hasAlert","className","role","id","message","InputArea","labelId","slugify","this","title","lower","remove","textAreaId","htmlFor","onChange","rows","readOnly","React","Component","ColArea","alertId","alertMessage","App","useState","pyProjectFile","SetPyProjectFile","newPyProjectFile","SetNewPyProjectFile","isPyProjectFileWithProblem","SetIsPyProjectFileWithProblem","SetVersions","useEffect","undefined","toml","parse","_","content","hasError","stringify","producePinnedVersions","event","target","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.15053777.chunk.js","sourcesContent":["export const pyProjectData = `\n[tool.poetry]\nname = \"testing_poetry\"\nversion = \"0.1.0\"\ndescription = \"\"\nauthors = [\"Bernardo Gomes <bgomesdeabreu@gmail.com>\"]\n\n[tool.poetry.dependencies]\npython = \"^3.8\"\nrequests = \">=2.24.0\"\nurllib3 = \"*\"\nchardet = \">=1.0.0\"\ncertifi = \"<2020.12.5\"\n\n[tool.poetry.dev-dependencies]\nrequests = \"^2.24.0\"\npytest = \">=6.0.0\"\n\n[build-system]\nrequires = [\"poetry-core>=1.0.0\"]\nbuild-backend = \"poetry.core.masonry.api\"\n`;\n\nexport const versionsData = `\ncertifi  2020.12.5 Python package for providing Mozilla's CA Bundle.\nchardet  3.0.4     Universal encoding detector for Python 2 and 3\nidna  2.10      Internationalized Domain Names in Applications (IDNA)\nrequests 2.25.1    Python HTTP for Humans.\nurllib3  1.25.11   HTTP library with thread-safe connection pooling, file post, and more.\npytest  6.2.5   pytest simple powerful testing with Python\n`;\n","import toml from \"@iarna/toml\";\nimport {\n  ICurrentDependencyInfo,\n  IDependencySpecificationRegex,\n} from \"./models\";\n\nconst regexList: IDependencySpecificationRegex[] = [\n  { dependencySpecification: \">=\", regex: new RegExp(\"^>=\\\\w\") },\n  { dependencySpecification: \">\", regex: new RegExp(\"^>\\\\w\") },\n  { dependencySpecification: \"<=\", regex: new RegExp(\"^<=\\\\w\") },\n  { dependencySpecification: \"<\", regex: new RegExp(\"^<\\\\w\") },\n  { dependencySpecification: \"!=\", regex: new RegExp(\"^!=\\\\w\") },\n  { dependencySpecification: \"^\", regex: new RegExp(\"^\\\\^\\\\w\") },\n  { dependencySpecification: \"~\", regex: new RegExp(\"^~\\\\w\") },\n  { dependencySpecification: \"*\", regex: new RegExp(\"^\\\\*\") },\n];\n\nexport function discoveryDependencySpecification(dependency: string): string {\n  let dependencies = [];\n  for (let i = 0; i < regexList.length; i++) {\n    const { dependencySpecification, regex } = regexList[i];\n    if (regex.test(dependency)) {\n      dependencies.push(dependencySpecification);\n    }\n  }\n  return dependencies.join(\", \");\n}\n\nexport function canChangeDependencySpecification(\n  dependencyDiscovered: string\n): boolean {\n  return [\">=\", \"*\"].includes(dependencyDiscovered);\n}\n\nexport function canUpdateDependency(dependency: string): boolean {\n  const dependencies = discoveryDependencySpecification(dependency);\n  return canChangeDependencySpecification(dependencies);\n}\n\nexport function removeEmptyString(list: string[]): string[] {\n  return list.filter((value: string) => !!value);\n}\n\nexport function splitTextLinesIntoList(versions: string): string[] {\n  return removeEmptyString(versions.split(\"\\n\"));\n}\n\nexport function getNameAndVersionOfEachDependency(\n  versions: string[]\n): ICurrentDependencyInfo[] {\n  return versions.map((value: string) => {\n    const [dependency, version] = value\n      .replace(/\\s+/g, \" \")\n      .split(\" \")\n      .slice(0, 2);\n    return { dependency, version };\n  });\n}\n\nexport function processDependency(\n  dependency: string,\n  section: string,\n  version: string,\n  pyProjectFileToml: any\n): any {\n  if (\n    dependency in pyProjectFileToml.tool.poetry[section] &&\n    canUpdateDependency(pyProjectFileToml.tool.poetry[section][dependency])\n  ) {\n    pyProjectFileToml.tool.poetry[section][dependency] = `>=${version}`;\n  }\n\n  return pyProjectFileToml;\n}\n\nexport function processDependencyList(\n  pyProjectFileToml: any,\n  currentDependenciesVersions: ICurrentDependencyInfo[]\n): any {\n  currentDependenciesVersions.forEach(({ dependency, version }) => {\n    processDependency(dependency, \"dependencies\", version, pyProjectFileToml);\n    processDependency(\n      dependency,\n      \"dev-dependencies\",\n      version,\n      pyProjectFileToml\n    );\n  });\n\n  return pyProjectFileToml;\n}\n\nexport function processPyProjectAndVersion(\n  pyProjectFileToml: any,\n  versions: string\n): any {\n  const versionsList = getNameAndVersionOfEachDependency(\n    splitTextLinesIntoList(versions)\n  );\n  return processDependencyList(pyProjectFileToml, versionsList);\n}\n\nexport function producePinnedVersions(pyProjectFile: string, versions: string) {\n  let pyProjectFileToml = undefined;\n  let newPyProjectFile = undefined;\n  try {\n    pyProjectFileToml = toml.parse(pyProjectFile);\n    newPyProjectFile = processPyProjectAndVersion(pyProjectFileToml, versions);\n  } catch (_) {\n    return { content: \"\", hasError: true };\n  }\n\n  return {\n    content: toml.stringify(newPyProjectFile).replace(/\" {2}\"/g, \"\"),\n    hasError: false,\n  };\n}\n","export default function AlertBar(props) {\n  if (props.hasAlert || false) {\n    return (\n      <p className=\"alert alert-danger\" role=\"alert\" id={props.id}>\n        {props.message}\n      </p>\n    );\n  } else {\n    return \"\";\n  }\n}\n","import React from \"react\";\nimport slugify from \"slugify\";\n\nclass InputArea extends React.Component {\n  render() {\n    const labelId =\n      slugify(this.props.title || \"\", {\n        lower: true,\n        remove: /[.]/g,\n      }) + \"-label\";\n    const textAreaId =\n      slugify(this.props.title || \"\", { lower: true, remove: /[.]/g }) +\n      \"-textarea\";\n    return (\n      <>\n        <label htmlFor={textAreaId} className=\"form-label\" id={labelId}>\n          {this.props.title}\n        </label>\n        <textarea\n          className=\"form-control\"\n          id={textAreaId}\n          value={this.props.value}\n          onChange={this.props.onChange}\n          rows={this.props.rows || 30}\n          readOnly={this.props.readOnly || false}\n        ></textarea>\n      </>\n    );\n  }\n}\n\nexport default InputArea;\n","import AlertBar from \"./alertBar\";\nimport InputArea from \"./inputArea\";\nimport slugify from \"slugify\";\n\nexport default function ColArea(props) {\n  const alertId =\n    slugify(props.title || \"\", {\n      lower: true,\n      remove: /[.]/g,\n    }) + \"-alert\";\n  return (\n    <div className=\"col\">\n      <AlertBar\n        hasAlert={props.hasAlert}\n        message={props.alertMessage}\n        id={alertId}\n      />\n      <div className=\"mb-3\">\n        <InputArea\n          title={props.title}\n          value={props.value}\n          onChange={props.onChange}\n          readOnly={props.readOnly || false}\n        />\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { pyProjectData, versionsData } from \"./exampleData\";\nimport { producePinnedVersions } from \"./businessRules\";\nimport ColArea from \"./components/colArea\";\n\nconst App = () => {\n  const [pyProjectFile, SetPyProjectFile] = useState(pyProjectData);\n  const [newPyProjectFile, SetNewPyProjectFile] = useState(pyProjectData);\n  const [isPyProjectFileWithProblem, SetIsPyProjectFileWithProblem] =\n    useState(false);\n  const [versions, SetVersions] = useState(versionsData);\n\n  function pyProjectFileHandleChange(event) {\n    SetPyProjectFile(event.target.value);\n  }\n  function versionsHandleChange(event) {\n    SetVersions(event.target.value);\n  }\n\n  useEffect(() => {\n    const { content, hasError } = producePinnedVersions(\n      pyProjectFile,\n      versions\n    );\n    SetIsPyProjectFileWithProblem(hasError);\n    SetNewPyProjectFile(content);\n  }, [pyProjectFile, versions]);\n\n  return (\n    <div className=\"row\">\n      <ColArea\n        title=\"PyProject.toml\"\n        value={pyProjectFile}\n        onChange={pyProjectFileHandleChange}\n        hasAlert={isPyProjectFileWithProblem}\n        alertMessage=\"PyProject.toml with problem.\"\n      />\n      <ColArea\n        title=\"poetry show\"\n        value={versions}\n        onChange={versionsHandleChange}\n      />\n      <ColArea\n        title=\"New PyProject.toml\"\n        value={newPyProjectFile}\n        readOnly={true}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}