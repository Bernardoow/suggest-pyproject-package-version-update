{"version":3,"sources":["exampleData.js","businessRules.js","components/alertBar.jsx","components/inputArea.jsx","components/colArea.jsx","App.js","reportWebVitals.js","index.js"],"names":["pyProjectData","canUpdateDependency","dependency","dependencies","regexList","RegExp","i","length","dependencySpecification","test","push","join","discoveryDependencySpecification","includes","processDependency","section","version","pyProjectFileToml","tool","poetry","processPyProjectAndVersion","versions","currentDependenciesVersions","forEach","processDependencyList","split","filter","value","splitTextLinesIntoList","map","replace","slice","AlertBar","props","hasAlert","className","role","id","message","InputArea","labelId","slugify","this","title","lower","remove","textAreaId","htmlFor","onChange","rows","readOnly","React","Component","ColArea","alertId","alertMessage","App","useState","pyProjectFile","SetPyProjectFile","newPyProjectFile","SetNewPyProjectFile","isPyProjectFileWithProblem","SetIsPyProjectFileWithProblem","SetVersions","useEffect","undefined","toml","parse","_","content","hasError","stringify","producePinnedVersions","event","target","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c50d44fc.chunk.js","sourcesContent":["export const pyProjectData = `\n[tool.poetry]\nname = \"testing_poetry\"\nversion = \"0.1.0\"\ndescription = \"\"\nauthors = [\"Bernardo Gomes <bgomesdeabreu@gmail.com>\"]\n\n[tool.poetry.dependencies]\npython = \"^3.8\"\nrequests = \">=2.24.0\"\nurllib3 = \"*\"\nchardet = \">=1.0.0\"\ncertifi = \"<2020.12.5\"\n\n[tool.poetry.dev-dependencies]\nrequests = \"^2.24.0\"\npytest = \">=6.0.0\"\n\n[build-system]\nrequires = [\"poetry-core>=1.0.0\"]\nbuild-backend = \"poetry.core.masonry.api\"\n`;\n\nexport const versionsData = `\ncertifi  2020.12.5 Python package for providing Mozilla's CA Bundle.\nchardet  3.0.4     Universal encoding detector for Python 2 and 3\nidna  2.10      Internationalized Domain Names in Applications (IDNA)\nrequests 2.25.1    Python HTTP for Humans.\nurllib3  1.25.11   HTTP library with thread-safe connection pooling, file post, and more.\npytest  6.2.5   pytest simple powerful testing with Python\n`;\n","import toml from \"@iarna/toml\";\n\nexport function discoveryDependencySpecification(dependency) {\n  const regexList = [\n    [\">=\", new RegExp(\"^>=\\\\w\")],\n    [\">\", new RegExp(\"^>\\\\w\")],\n    [\"<=\", new RegExp(\"^<=\\\\w\")],\n    [\"<\", new RegExp(\"^<\\\\w\")],\n    [\"!=\", new RegExp(\"^!=\\\\w\")],\n    [\"^\", new RegExp(\"^\\\\^\\\\w\")],\n    [\"~\", new RegExp(\"^~\\\\w\")],\n    [\"*\", new RegExp(\"^\\\\*\")],\n  ];\n\n  let dependencies = [];\n  for (let i = 0; i < regexList.length; i++) {\n    const [dependencySpecification, regex] = regexList[i];\n    if (regex.test(dependency)) {\n      dependencies.push(dependencySpecification);\n    }\n  }\n  return dependencies.join(\", \");\n}\n\nexport function canChangeDependencySpecification(dependencyDiscovered) {\n  return [\">=\", \"*\"].includes(dependencyDiscovered);\n}\n\nexport function canUpdateDependency(dependency) {\n  const dependencies = discoveryDependencySpecification(dependency);\n  return canChangeDependencySpecification(dependencies);\n}\n\nexport function splitTextLinesIntoList(versions) {\n  return removeEmptyString(versions.split(\"\\n\"));\n}\n\nexport function removeEmptyString(stringList) {\n  return stringList.filter((value) => !!value);\n}\n\nexport function getNameAndVersionOfEachDependency(stringList) {\n  return stringList.map((value) => {\n    return value.replace(/\\s+/g, \" \").split(\" \").slice(0, 2);\n  });\n}\n\nexport function processDependency(\n  dependency,\n  section,\n  version,\n  pyProjectFileToml\n) {\n  if (\n    dependency in pyProjectFileToml.tool.poetry[section] &&\n    canUpdateDependency(pyProjectFileToml.tool.poetry[section][dependency])\n  ) {\n    pyProjectFileToml.tool.poetry[section][dependency] = `>=${version}`;\n  }\n  return pyProjectFileToml;\n}\n\nexport function processDependencyList(\n  pyProjectFileToml,\n  currentDependenciesVersions\n) {\n  currentDependenciesVersions.forEach(([dependency, version]) => {\n    processDependency(dependency, \"dependencies\", version, pyProjectFileToml);\n    processDependency(\n      dependency,\n      \"dev-dependencies\",\n      version,\n      pyProjectFileToml\n    );\n  });\n\n  return pyProjectFileToml;\n}\n\nexport function processPyProjectAndVersion(pyProjectFileToml, versions) {\n  const versionsList = getNameAndVersionOfEachDependency(\n    splitTextLinesIntoList(versions)\n  );\n  return processDependencyList(pyProjectFileToml, versionsList);\n}\n\nexport function producePinnedVersions(pyProjectFile, versions) {\n  let pyProjectFileToml = undefined;\n  let newPyProjectFile = undefined;\n  try {\n    pyProjectFileToml = toml.parse(pyProjectFile);\n    newPyProjectFile = processPyProjectAndVersion(pyProjectFileToml, versions);\n  } catch (_) {\n    return { content: \"\", hasError: true };\n  }\n\n  return {\n    content: toml.stringify(newPyProjectFile).replace(/\" {2}\"/g, \"\"),\n    hasError: false,\n  };\n}\n","export default function AlertBar(props) {\n  if (props.hasAlert || false) {\n    return (\n      <p className=\"alert alert-danger\" role=\"alert\" id={props.id}>\n        {props.message}\n      </p>\n    );\n  } else {\n    return \"\";\n  }\n}\n","import React from \"react\";\nimport slugify from \"slugify\";\n\nclass InputArea extends React.Component {\n  render() {\n    const labelId =\n      slugify(this.props.title || \"\", {\n        lower: true,\n        remove: /[.]/g,\n      }) + \"-label\";\n    const textAreaId =\n      slugify(this.props.title || \"\", { lower: true, remove: /[.]/g }) +\n      \"-textarea\";\n    return (\n      <>\n        <label htmlFor={textAreaId} className=\"form-label\" id={labelId}>\n          {this.props.title}\n        </label>\n        <textarea\n          className=\"form-control\"\n          id={textAreaId}\n          value={this.props.value}\n          onChange={this.props.onChange}\n          rows={this.props.rows || 30}\n          readOnly={this.props.readOnly || false}\n        ></textarea>\n      </>\n    );\n  }\n}\n\nexport default InputArea;\n","import AlertBar from \"./alertBar\";\nimport InputArea from \"./inputArea\";\nimport slugify from \"slugify\";\n\nexport default function ColArea(props) {\n  const alertId =\n    slugify(props.title || \"\", {\n      lower: true,\n      remove: /[.]/g,\n    }) + \"-alert\";\n  return (\n    <div className=\"col\">\n      <AlertBar\n        hasAlert={props.hasAlert}\n        message={props.alertMessage}\n        id={alertId}\n      />\n      <div className=\"mb-3\">\n        <InputArea\n          title={props.title}\n          value={props.value}\n          onChange={props.onChange}\n          readOnly={props.readOnly || false}\n        />\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { pyProjectData, versionsData } from \"./exampleData\";\nimport { producePinnedVersions } from \"./businessRules\";\nimport ColArea from \"./components/colArea\";\n\nconst App = () => {\n  const [pyProjectFile, SetPyProjectFile] = useState(pyProjectData);\n  const [newPyProjectFile, SetNewPyProjectFile] = useState(pyProjectData);\n  const [isPyProjectFileWithProblem, SetIsPyProjectFileWithProblem] =\n    useState(false);\n  const [versions, SetVersions] = useState(versionsData);\n\n  function pyProjectFileHandleChange(event) {\n    SetPyProjectFile(event.target.value);\n  }\n  function versionsHandleChange(event) {\n    SetVersions(event.target.value);\n  }\n\n  useEffect(() => {\n    const { content, hasError } = producePinnedVersions(\n      pyProjectFile,\n      versions\n    );\n    SetIsPyProjectFileWithProblem(hasError);\n    SetNewPyProjectFile(content);\n  }, [pyProjectFile, versions]);\n\n  return (\n    <div className=\"row\">\n      <ColArea\n        title=\"PyProject.toml\"\n        value={pyProjectFile}\n        onChange={pyProjectFileHandleChange}\n        hasAlert={isPyProjectFileWithProblem}\n        alertMessage=\"PyProject.toml with problem.\"\n      />\n      <ColArea\n        title=\"poetry show\"\n        value={versions}\n        onChange={versionsHandleChange}\n      />\n      <ColArea\n        title=\"New PyProject.toml\"\n        value={newPyProjectFile}\n        readOnly={true}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}