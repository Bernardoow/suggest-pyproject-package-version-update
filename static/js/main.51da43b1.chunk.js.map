{"version":3,"sources":["suggestPyProjectPackageVersionUpdate.jsx","exampleData.js","App.js","reportWebVitals.js","index.js"],"names":["SuggestPyProjectPackageVersionUpdate","useState","pyProjectFile","SetPyProjectFile","isPyProjectFileWithProblem","SetIsPyProjectFileWithProblem","versions","SetVersions","pinedVersions","SetPinedVersions","pinedDevVersions","SetPinedDevVersions","useEffect","producePinnedVersions","dependencies","split","filter","value","map","replaceAll","slice","reduce","accumulator","currentValue","k","v","concat","pyProjectFileToml","toml","parse","tool","poetry","e","className","role","class","for","id","onChange","event","target","rows","readOnly","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4SAsHeA,EAlH8B,WAAO,IAAD,EACPC,mBCLlB,kVDIyB,mBAC1CC,EAD0C,KAC3BC,EAD2B,OAEmBF,oBAClE,GAH+C,mBAE1CG,EAF0C,KAEdC,EAFc,OAKjBJ,mBCST,6VDd0B,mBAK1CK,EAL0C,KAKhCC,EALgC,WAcPN,mBAAS,IAdF,mBAc1CO,EAd0C,KAc3BC,EAd2B,OAeDR,mBAAS,IAfR,mBAe1CS,EAf0C,KAexBC,EAfwB,KAgDjD,OA/BAC,qBAAU,WACR,SAASC,EAAsBC,GAC7B,OAAOR,EACJS,MAAM,MACNC,QAAO,SAACC,GAAD,QAAaA,KACpBC,KAAI,SAACD,GACJ,OAAOA,EAAME,WAAW,OAAQ,KAAKJ,MAAM,KAAKK,MAAM,EAAG,MAE1DC,QAAO,SAACC,EAAaC,GAAkB,IAAD,cACtBA,EADsB,GAC9BC,EAD8B,KAC3BC,EAD2B,KAErC,OAAID,KAAKV,EACAQ,EAAYI,OAAOF,EAAG,MAAO,MAAOC,EAAG,OAEzCH,IACN,IAGP,IACE,IAAMK,EAAoBC,IAAKC,MAAM3B,GACrCG,GAA8B,GAC9BI,EACEI,EAAsBc,EAAkBG,KAAKC,OAAvB,eAExBpB,EACEE,EAAsBc,EAAkBG,KAAKC,OAAO,sBAEtD,MAAOC,GACP3B,GAA8B,MAE/B,CAACH,EAAeI,IAGjB,sBAAK2B,UAAU,MAAf,UACE,sBAAKA,UAAU,MAAf,UACG7B,EACC,mBAAG6B,UAAU,qBAAqBC,KAAK,QAAvC,0CAIA,GAGF,sBAAKC,MAAM,OAAX,UACE,uBAAOC,IAAI,gBAAgBD,MAAM,aAAjC,4BAGA,0BACEF,UAAU,eACVI,GAAG,gBACHpB,MAAOf,EACPoC,SA5DV,SAAmCC,GACjCpC,EAAiBoC,EAAMC,OAAOvB,QA4DtBwB,KAAK,aAIX,qBAAKR,UAAU,MAAf,SACE,sBAAKE,MAAM,OAAX,UACE,uBAAOC,IAAI,aAAaD,MAAM,aAA9B,yBAGA,0BACEF,UAAU,eACVI,GAAG,aACHpB,MAAOX,EACPgC,SAvEV,SAA8BC,GAC5BhC,EAAYgC,EAAMC,OAAOvB,QAuEjBwB,KAAK,YAIX,qBAAKR,UAAU,MAAf,SACE,sBAAKE,MAAM,OAAX,UACE,uBAAOC,IAAI,SAASD,MAAM,aAA1B,0BAGA,0BACEF,UAAU,eACVI,GAAG,eACHpB,MAAOT,EACPkC,UAAQ,EACRD,KAAK,OAEP,uBAAOL,IAAI,SAASD,MAAM,aAA1B,8BAGA,0BACEF,UAAU,eACVI,GAAG,mBACHpB,MAAOP,EACPgC,UAAQ,EACRD,KAAK,gBEnGFE,MARf,WACE,OACE,qBAAKV,UAAU,kBAAf,SACE,cAAC,EAAD,OCMSW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.51da43b1.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport toml from \"toml\";\nimport { pyProjectData, versionsData } from \"./exampleData\";\n\nconst SuggestPyProjectPackageVersionUpdate = () => {\n  const [pyProjectFile, SetPyProjectFile] = useState(pyProjectData);\n  const [isPyProjectFileWithProblem, SetIsPyProjectFileWithProblem] = useState(\n    false\n  );\n  const [versions, SetVersions] = useState(versionsData);\n\n  function pyProjectFileHandleChange(event) {\n    SetPyProjectFile(event.target.value);\n  }\n  function versionsHandleChange(event) {\n    SetVersions(event.target.value);\n  }\n\n  const [pinedVersions, SetPinedVersions] = useState(\"\");\n  const [pinedDevVersions, SetPinedDevVersions] = useState(\"\");\n\n  useEffect(() => {\n    function producePinnedVersions(dependencies) {\n      return versions\n        .split(\"\\n\")\n        .filter((value) => !!value)\n        .map((value) => {\n          return value.replaceAll(/\\s+/g, \" \").split(\" \").slice(0, 2);\n        })\n        .reduce((accumulator, currentValue) => {\n          const [k, v] = currentValue;\n          if (k in dependencies) {\n            return accumulator.concat(k, \" = \", '\">=', v, '\"\\n');\n          }\n          return accumulator;\n        }, \"\");\n    }\n\n    try {\n      const pyProjectFileToml = toml.parse(pyProjectFile);\n      SetIsPyProjectFileWithProblem(false);\n      SetPinedVersions(\n        producePinnedVersions(pyProjectFileToml.tool.poetry[\"dependencies\"])\n      );\n      SetPinedDevVersions(\n        producePinnedVersions(pyProjectFileToml.tool.poetry[\"dev-dependencies\"])\n      );\n    } catch (e) {\n      SetIsPyProjectFileWithProblem(true);\n    }\n  }, [pyProjectFile, versions]);\n\n  return (\n    <div className=\"row\">\n      <div className=\"col\">\n        {isPyProjectFileWithProblem ? (\n          <p className=\"alert alert-danger\" role=\"alert\">\n            PyProject.toml with problem.\n          </p>\n        ) : (\n          \"\"\n        )}\n\n        <div class=\"mb-3\">\n          <label for=\"pyProjectToml\" class=\"form-label\">\n            PyProject.toml\n          </label>\n          <textarea\n            className=\"form-control\"\n            id=\"pyProjectToml\"\n            value={pyProjectFile}\n            onChange={pyProjectFileHandleChange}\n            rows=\"20\"\n          ></textarea>\n        </div>\n      </div>\n      <div className=\"col\">\n        <div class=\"mb-3\">\n          <label for=\"poetryShow\" class=\"form-label\">\n            poetry show\n          </label>\n          <textarea\n            className=\"form-control\"\n            id=\"poetryShow\"\n            value={versions}\n            onChange={versionsHandleChange}\n            rows=\"20\"\n          ></textarea>\n        </div>\n      </div>\n      <div className=\"col\">\n        <div class=\"mb-3\">\n          <label for=\"result\" class=\"form-label\">\n            Dependencies\n          </label>\n          <textarea\n            className=\"form-control\"\n            id=\"dependencies\"\n            value={pinedVersions}\n            readOnly\n            rows=\"15\"\n          ></textarea>\n          <label for=\"result\" class=\"form-label\">\n            Dev-dependencies\n          </label>\n          <textarea\n            className=\"form-control\"\n            id=\"dev-dependencies\"\n            value={pinedDevVersions}\n            readOnly\n            rows=\"15\"\n          ></textarea>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SuggestPyProjectPackageVersionUpdate;\n","export const pyProjectData = `\n[tool.poetry]\nname = \"testing_poetry\"\nversion = \"0.1.0\"\ndescription = \"\"\nauthors = [\"Bernardo Gomes <bgomesdeabreu@gmail.com>\"]\n\n[tool.poetry.dependencies]\npython = \"^3.8\"\nrequests = \"^2.24.0\"\n\n[tool.poetry.dev-dependencies]\n\n[build-system]\nrequires = [\"poetry-core>=1.0.0\"]\nbuild-backend = \"poetry.core.masonry.api\"\n`;\n\nexport const versionsData = `\ncertifi  2020.12.5 Python package for providing Mozilla's CA Bundle.\nchardet  3.0.4     Universal encoding detector for Python 2 and 3\nidna  2.10      Internationalized Domain Names in Applications (IDNA)\nrequests 2.25.1    Python HTTP for Humans.\nurllib3  1.25.11   HTTP library with thread-safe connection pooling, file post, and more.\n`;\n","import \"./App.css\";\nimport SuggestPyProjectPackageVersionUpdate from \"./suggestPyProjectPackageVersionUpdate.jsx\";\n\nfunction App() {\n  return (\n    <div className=\"container-fluid\">\n      <SuggestPyProjectPackageVersionUpdate />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}